spring.application.name=user-service

#DB Props
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://postgres:5432/${DB_NAME}
spring.datasource.url=jdbc:postgresql://${DB_HOST:user-db-service}:${DB_PORT:5432}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

#flyway props
spring.flyway.enabled=true
#spring.flyway.baseline-on-migrate=true
spring.flyway.out-of-order=true
spring.flyway.schemas=public
spring.flyway.locations=classpath:db/migration
spring.jpa.hibernate.ddl-auto=validate

#Docker compose props
spring.docker.compose.enabled=true

# Swagger Props
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.path=/api-docs/swagger

# monitoring props
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=user-service
management.tracing.sampling.probability=1.0

# Rabbitmq props
rabbitmq.queue.name=${RABBITMQ_QUEUE_NAME:user_email_updates}
rabbitmq.exchange.name=${RABBITMQ_EXCHANGE_NAME:user_events}
rabbitmq.routing.key=${RABBITMQ_ROUTING_KEY:user.email.updated}

spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

spring.rabbitmq.connection-timeout=5000
spring.rabbitmq.ssl.enabled=${RABBITMQ_SSL_ENABLED:false}

### Loki URL - referenced in 'logback-spring.xml'
loki.url: ${LOKI_URL:http://localhost:3100/loki/api/v1/push}
