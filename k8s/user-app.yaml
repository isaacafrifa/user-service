# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-app
  labels:
    app: user-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-app
  template:
    metadata:
      name: user-template
      labels:
        app: user-app
    spec:
      containers:
        - name: user-service
          image: isaacafrifa/bm-user-service:0.0.1-SNAPSHOT-20250518-2125
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: user-secrets
                  key: POSTGRES_DB
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-secrets
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-secrets
                  key: POSTGRES_PASSWORD
             # Shared Infrastructure Variables
            ## Loki
            - name: LOKI_URL
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key: LOKI_URL
            ## rabbitMQ
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key:  RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key:  RABBITMQ_PORT
            - name: RABBITMQ_MANAGEMENT_PORT
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key:  RABBITMQ_MANAGEMENT_PORT
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: RABBITMQ_USERNAME
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: RABBITMQ_PASSWORD
           ## zipkin
            - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
         # Lower resources ideal for local dev. Update when doing heavy processing or caching.
          resources:
            requests:
              memory: "300Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
        # Lower resource memory may lead to slow boot (~60s+); adjust readiness/liveness probes accordingly
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120  # Gives app plenty of time to start
            periodSeconds: 10  # Checks every 10 seconds
            failureThreshold: 3 # Restarts after 3 failures (30 seconds)
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30 # Shorter delay - starts checking sooner
            periodSeconds: 5  # More frequent checks

---

# Service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-app    # Match the deployment labels
spec:
  type: ClusterIP
  selector:
    app: user-app  # Matches Deployment's label
  ports:
    - protocol: TCP
      port: 8080      # The port other services use to access
      targetPort: 8080  # The container port
